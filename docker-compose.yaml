version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    env_file:
      - ./task_manager/.env  # Здесь указаны переменные POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB
    ports:
      - "5432:5432"
    volumes:
      - post_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app_network

  django_service:
    build:
      context: ./task_manager  # Папка с кодом Django
      dockerfile: ../Dockerfile.django  # Dockerfile для Django
    container_name: django_microservice
    volumes:
      - ./task_manager:/app  # Совпадение с контекстом
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8001:8000"
    depends_on:
      - postgres
    env_file:
      - ./task_manager/.env  # Переменные окружения для Django
    restart: always
    networks:
      - app_network
    command: >
      sh -c "poetry run python manage.py migrate && 
             poetry run gunicorn city_app.wsgi:application --bind 0.0.0.0:8000"

  fastapi_service:
    build:
      context: ./users_api  # Папка с кодом FastAPI
      dockerfile: ../Dockerfile.fastapi  # Dockerfile для FastAPI
    container_name: fastapi_microservice
    ports:
      - "8002:8000"
    volumes:
      - ./users_api:/app  # Совпадение с контекстом
    env_file:
      - ./users_api/.env  # Переменные окружения для FastAPI
    restart: always
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx_web
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - django_service
      - fastapi_service
    networks:
      - app_network

volumes:
  post_data:
    driver: local
  static_volume:
  media_volume:

networks:
  app_network:
    driver: bridge
